{"version":3,"sources":["main.js"],"names":["gameScene","Phaser","Scene","gameOptions","slicePrizes","preload","load","image","create","bg","add","sprite","setPosition","setScale","wheel","align","physics","existing","pin","text","font","color","text_more","canSpin","update","input","activePointer","isDown","setText","rounds","Math","Between","degrees","prize","floor","tweens","targets","angle","duration","ease","callbackScope","onComplete","tween","console","log","window","onload","config","type","AUTO","width","height","scene","default","arcade","gravity","y","debug","game","Game","focus","resize","addEventListener","canvas","document","querySelector","windowWidth","innerWidth","windowHeight","innerHeight","windowRatio","gameRatio","style"],"mappings":"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","file":"main.1f19ae8e.js","sourceRoot":"..","sourcesContent":["let gameScene= new Phaser.Scene('Game');\r\nvar gameOptions = {\r\n \r\n    \r\n \r\n    \r\n    slicePrizes: [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\",\"9\",\"10\",\"11\",\"12\"],\r\n \r\n    \r\n}\r\ngameScene.preload=function(){\r\n    this.load.image('background', 'assets/background_new.png');\r\n    this.load.image('wheel', 'assets/wheel_mod.png');\r\n    this.load.image('pin', 'assets/pin_mod.png');\r\n};   \r\ngameScene.create=function(){\r\n   \r\n    let bg=this.add.sprite(0,0,'background');\r\n    bg.setPosition(640/2,450/2);\r\n    bg.setScale(2.9,2.9);\r\n    \r\n    this.wheel=this.add.sprite(150,180,'wheel',{align:\"center\"});\r\n    this.wheel.setScale(1.3,1.3);\r\n     this.physics.add.existing(this.wheel);\r\n    this.pin=this.add.sprite(140,60,'pin');\r\n    this.pin.setScale(0.3,0.3);\r\n    this.text = this.add.text(1,340, \"Press to Spin the wheel\", {\r\n            font: \"bold 50px Arial\",\r\n            align: \"center\",\r\n            color: \"black\"\r\n        });\r\n    this.text_more = this.add.text(80,390, \" \", {\r\n            font: \"bold 50px Arial\",\r\n            align: \"center\",\r\n            color: \"black\"\r\n        });\r\n    \r\n    this.canSpin=true;\r\n};\r\n        gameScene.update=function(){\r\n            if (this.input.activePointer.isDown){\r\n            if(this.canSpin){\r\n                this.text.setText(\"\");\r\n            var rounds = Phaser.Math.Between(2, 4);\r\n               \r\n \r\n            // then will rotate by a random number from 0 to 360 degrees. This is the actual spin\r\n            var degrees = Phaser.Math.Between(0, 360);\r\n                var prize = 12 - 1 - Math.floor(degrees / (360 / 12)); \r\n                this.canSpin = false;\r\n                \r\n                this.tweens.add({\r\n \r\n                // adding the wheel to tween targets\r\n                targets: [this.wheel],\r\n \r\n                // angle destination\r\n                angle: 360 * rounds + degrees,\r\n \r\n                // tween duration\r\n                duration: 3000,\r\n \r\n                // tween easing\r\n                ease: \"Cubic.easeOut\",\r\n \r\n                // callback scope\r\n                callbackScope: this,\r\n \r\n                // function to be executed once the tween has been completed\r\n                onComplete: function(tween){\r\n                   \r\n \r\n                    // displaying prize text\r\n                    this.text.setText(gameOptions.slicePrizes[prize]+\" is what you got\");\r\n                    console.log(gameOptions.slicePrizes[prize]);\r\n                    if(gameOptions.slicePrizes[prize]>=1 && gameOptions.slicePrizes[prize]<=6)\r\n                        {\r\n                            this.text_more.setText(\"Try again\");\r\n                        }\r\n                    else{\r\n                        this.text_more.setText(\"Good\");\r\n                    }\r\n \r\n                    // player can spin again\r\n                    this.canSpin = true;\r\n                }\r\n            });\r\n//            if (this.input.activePointer.isDown) {\r\n//                \r\n//    this.wheel.rotation += 1;\r\n//}\r\n            }\r\n           \r\n//            if (this.press.onTouchStart)\r\n//    {\r\n//        this.wheel.rotation += 3;\r\n//    }\r\n            }\r\n        };\r\n        \r\n  window.onload = function() {      \r\n        let config={\r\n            type:Phaser.AUTO,\r\n            width:640,\r\n            height:450,\r\n            scene: gameScene,\r\n            physics:{\r\n                default: 'arcade',\r\n                arcade:{\r\n                    gravity:{y: 0},\r\n                    debug:false\r\n                }\r\n            }\r\n        }\r\n        let game=new Phaser.Game(config);\r\n       window.focus()\r\n    resize();\r\n    window.addEventListener(\"resize\", resize, false);\r\n  }\r\n  function resize() {\r\n    var canvas = document.querySelector(\"canvas\");\r\n    var windowWidth = window.innerWidth;\r\n    var windowHeight = window.innerHeight;\r\n    var windowRatio = windowWidth / windowHeight;\r\n    var gameRatio = 640 / 450;\r\n    if(windowRatio < gameRatio){\r\n        canvas.style.width = windowWidth + \"px\";\r\n        canvas.style.height = (windowWidth / gameRatio) + \"px\";\r\n    }\r\n    else{\r\n        canvas.style.width = (windowHeight * gameRatio) + \"px\";\r\n        canvas.style.height = windowHeight + \"px\";\r\n    }\r\n}"]}